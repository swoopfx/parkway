<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Lga extends \Application\Entity\Lga implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'lgaId', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'lgaName', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'stateId', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'lgaDescription', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'enteredByUser', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'dateEntered', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'userIpAddress', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'pollingUnits'];
        }

        return ['__isInitialized__', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'id', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'lgaId', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'lgaName', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'stateId', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'lgaDescription', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'enteredByUser', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'dateEntered', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'userIpAddress', '' . "\0" . 'Application\\Entity\\Lga' . "\0" . 'pollingUnits'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Lga $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUniqueid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueid', []);

        return parent::getUniqueid();
    }

    /**
     * {@inheritDoc}
     */
    public function getLgaId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLgaId', []);

        return parent::getLgaId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLgaName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLgaName', []);

        return parent::getLgaName();
    }

    /**
     * {@inheritDoc}
     */
    public function getStateId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStateId', []);

        return parent::getStateId();
    }

    /**
     * {@inheritDoc}
     */
    public function getLgaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLgaDescription', []);

        return parent::getLgaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getEnteredByUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnteredByUser', []);

        return parent::getEnteredByUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEntered()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEntered', []);

        return parent::getDateEntered();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIpAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIpAddress', []);

        return parent::getUserIpAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueid($uniqueid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueid', [$uniqueid]);

        return parent::setUniqueid($uniqueid);
    }

    /**
     * {@inheritDoc}
     */
    public function setLgaId($lgaId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLgaId', [$lgaId]);

        return parent::setLgaId($lgaId);
    }

    /**
     * {@inheritDoc}
     */
    public function setLgaName($lgaName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLgaName', [$lgaName]);

        return parent::setLgaName($lgaName);
    }

    /**
     * {@inheritDoc}
     */
    public function setStateId($stateId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStateId', [$stateId]);

        return parent::setStateId($stateId);
    }

    /**
     * {@inheritDoc}
     */
    public function setLgaDescription($lgaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLgaDescription', [$lgaDescription]);

        return parent::setLgaDescription($lgaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnteredByUser($enteredByUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnteredByUser', [$enteredByUser]);

        return parent::setEnteredByUser($enteredByUser);
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEntered($dateEntered)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEntered', [$dateEntered]);

        return parent::setDateEntered($dateEntered);
    }

    /**
     * {@inheritDoc}
     */
    public function setUserIpAddress($userIpAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserIpAddress', [$userIpAddress]);

        return parent::setUserIpAddress($userIpAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getPollingUnits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPollingUnits', []);

        return parent::getPollingUnits();
    }

}
